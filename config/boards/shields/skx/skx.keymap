#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define def 0
#define right 1
#define left 2
#define nav 3
#define sys 4

&lt {
    flavor = "balanced";
    tapping-term-ms = <1024>;
};

&mt {
    flavor = "balanced";
    tapping-term-ms = <1024>;
};

&sk {
    quick-release;
};

&sl {
    quick-release;
};

/ {

    keymap {
        compatible = "zmk,keymap";

        def {
            bindings = <
                &kp S     &kp L     &kp H    &kp W      &kp Z
                    &kp SEMI    &kp P     &kp U    &kp O    &kp I

                &sk LSHFT     &mt LALT R     &mt LCTRL N    &mt LGUI T    &kp V
                    &kp K   &mt RGUI D     &mt RCTRL E      &mt RALT A     &sk RSHFT

                &kp F   &kp C   &kp B   &kp M   &kp SLASH
                    &kp Q   &kp G   &kp X   &kp J   &kp Y

                &sl right   &lt nav SPACE   &kp ESC
                    &kp RET    &lt sys SPACE    &sl left
                >;
        };

        right {
            bindings = <
                &trans    &trans    &trans    &trans    &trans
                    &trans      &kp N7      &kp N8      &kp N9      &kp N0

                &trans   &kp LALT   &kp LCTRL   &kp LGUI   &trans
                    &trans      &kp N4     &kp N5      &kp N6     &trans

                &trans    &trans     &trans      &trans     &trans
                    &trans      &kp N1     &kp N2      &kp N3     &trans

                &trans      &trans      &trans
                    &kp DEL      &trans     &kp BSPC
                >;
        };

        left {
            bindings = <
                &trans      &kp GRAVE   &kp LBKT      &kp RBKT    &trans
                    &trans      &trans      &trans        &trans      &trans

                &kp CAPS   &kp SQT     &kp COMMA     &kp DOT     &trans
                    &trans      &kp RGUI    &kp RCTRL     &kp RALT    &trans

                &trans    &kp BSLH    &kp MINUS     &kp EQUAL   &trans
                    &trans      &trans      &trans        &trans      &trans

                &kp TAB     &kp INS      &trans
                    &trans      &trans      &trans
                >;
        };

        nav {
            bindings = <
                &trans      &bt BT_SEL 0   &bt BT_NXT     &bt BT_CLR     &trans
                    &trans         &trans        &kp UP         &trans       &trans

                &trans      &kp LALT       &kp LCTRL      &kp LGUI       &trans
                    &trans        &kp LEFT       &kp DOWN       &kp RIGHT      &kp K_APP

                &trans         &trans      &trans     &trans         &trans
                    &trans         &trans      &trans     &trans         &trans

                &trans         &trans         &trans
                    &trans         &trans         &trans
                >;
        };

        sys {
            bindings = <
                &trans         &trans        &kp PG_UP         &trans     &trans
                    &trans      &trans         &trans         &trans         &trans

                &trans      &kp HOME        &kp PG_DN         &kp END         &trans
                    &trans      &kp LGUI       &kp LCTRL      &kp LALT       &trans

                &trans         &trans         &trans         &trans         &trans
                    &trans      &kp C_VOL_UP      &kp C_VOL_DN    &kp K_MUTE    &trans

                &trans         &trans         &trans
                    &trans         &trans         &trans
                >;
        };

        // fn {
        //     bindings = <
        //         &kp F1    &kp F2     &kp F3     &kp F4     &trans
        //             &trans    &trans     &trans     &trans     &trans

        //         &kp F5    &kp F6     &kp F7     &kp F8     &trans
        //             &trans    &kp RGUI   &kp RCTRL   &kp RALT   &trans

        //         &kp F9    &kp F10    &kp F11    &kp F12   &trans
        //             &trans    &trans     &trans     &trans    &trans

        //         &trans    &trans     &trans
        //             &trans    &trans     &trans
        //         >;
        // };

    };

};
